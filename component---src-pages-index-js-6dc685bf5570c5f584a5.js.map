{"version":3,"file":"component---src-pages-index-js-6dc685bf5570c5f584a5.js","mappings":"4LA8DA,UArDkB,SAAC,GAAwB,IAAD,EAArBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQN,EAAKO,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAD,CAAQR,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAD,CAAKG,MAAM,cACX,mLAWJ,gBAAC,IAAD,CAAQJ,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAD,CAAKG,MAAM,cACX,qBAAGK,UAAU,QAAb,gJAAiK,gBAAC,EAAAC,KAAD,CAAMC,GAAG,WAAT,QAAjK,KACA,sBAAIF,UAAU,YACXJ,EAAMO,KAAI,SAAAC,GACT,IAAMT,EAAQS,EAAKC,YAAYV,OAASS,EAAKE,OAAOC,KAC9CC,GAAYC,EAAAA,EAAAA,GAASL,EAAKC,YAAYG,WAE5C,OACE,sBACEE,IAAKN,EAAKE,OAAOC,KACjBP,UAAU,gBACV,2BACEW,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAX,KAAD,CAAMC,GAAIE,EAAKE,OAAOC,KAAMM,SAAS,OACnC,gBAAC,EAAAC,EAAD,CAAaC,MAAOP,EAAWQ,IAAQrB,EAAL,eAClC,wBAAMkB,SAAS,YAAYlB,KAG/B,0BAAKS,EAAKC,YAAYY","sources":["webpack://microgame-kata-site/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nimport \"./index.scss\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nconst KataIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const katas = data.allMarkdownRemark.nodes\n\n  if (katas.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All katas\" />\n        <p>\n          No katas found. Add markdown katas to \"content/katas\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All katas\" />\n      <p className=\"lead\">Tiny microgame katas based on Warioware, picked to help you practice game dev while having fun. When you're ready, you can submit your katas <Link to=\"/submit\">here</Link>.</p>\n      <ol className=\"kataList\">\n        {katas.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n          const thumbnail = getImage(post.frontmatter.thumbnail)\n\n          return (\n            <li\n              key={post.fields.slug}\n              className=\"kataListItem\">\n              <article\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <GatsbyImage image={thumbnail} alt={`${title} thumbnail`} />\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <h3>{post.frontmatter.number}</h3>\n                </header>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default KataIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___number], order: ASC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          number\n          published_at(formatString: \"MMMM DD, YYYY\")\n          last_updated_at(formatString: \"MMMM DD, YYYY\")\n          description\n          thumbnail {\n            publicURL,\n            childImageSharp {\n              gatsbyImageData(\n                width: 240,\n                height: 160,\n                placeholder: BLURRED\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["data","location","siteTitle","site","siteMetadata","title","katas","allMarkdownRemark","nodes","length","className","Link","to","map","post","frontmatter","fields","slug","thumbnail","getImage","key","itemScope","itemType","itemProp","G","image","alt","number"],"sourceRoot":""}