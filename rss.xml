<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Microgame Katas]]></title><description><![CDATA[A series of Katas based on the Warioware Mega Microgames game on GBA, to help you practice the basics.]]></description><link>https://microgamekatas.dev</link><generator>GatsbyJS</generator><lastBuildDate>Fri, 17 Jun 2022 15:37:13 GMT</lastBuildDate><item><title><![CDATA[Banana Munch]]></title><description><![CDATA[Starting off with the basics, giving you a base for all the other katas. Mash the button to eat the whole banana before the time runs out…]]></description><link>https://microgamekatas.dev/001-banana-munch/</link><guid isPermaLink="false">https://microgamekatas.dev/001-banana-munch/</guid><content:encoded>&lt;p&gt;Starting off with the basics, giving you a base for all the other katas. Mash the button to eat the whole banana before the time runs out!&lt;/p&gt;
&lt;h2&gt;Criteria&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Draw a banana on the screen.&lt;/li&gt;
&lt;li&gt;On a players input, advance the bananas state one more step in being eaten. Start with taking off the peel, then eating the inside.&lt;/li&gt;
&lt;li&gt;Add a timer with a basic countdown display to zero.&lt;/li&gt;
&lt;li&gt;
&lt;div class=&quot;loseState&quot;&gt;Lose State&lt;/div&gt; The timer runs out.
&lt;/li&gt;
&lt;li&gt;
&lt;div class=&quot;winState&quot;&gt;Win State&lt;/div&gt; The player manages to eat the whole banana before the timer runs out.
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Extra Credit&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Add some shake to the banana while it is being eaten. Once the banana is fully eaten, it stops shaking.&lt;/li&gt;
&lt;li&gt;Add some particles when the bananas insides get eaten. Wario is a messy eater!&lt;/li&gt;
&lt;li&gt;Add a background. The original game you’re eating a banana in space, but you can choose whatever background you want. Extra extra credit for an animated background.&lt;/li&gt;
&lt;li&gt;Multiple difficulties; The original game required 5 presses for difficulty 1, 6 presses for difficulty 2, and 8 for difficulty 3. But do what you feel is best!&lt;/li&gt;
&lt;li&gt;Make the timer re-usable in your chosen game engine. The timer concept is central to all the Microgames. To help with future katas, making a re-usable timer object now will make things a bit smoother.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Media&lt;/h2&gt;
&lt;figure&gt;
  &lt;img src=&quot;/7b572bb4ebe4487b35bc6c4ae8285b5b/banana_munch_diff_1_success.gif&quot; alt=&quot;example of banana munch where the player wins&quot;&gt;
  &lt;figcaption&gt;Winning a round by finishing off the banana.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
  &lt;img src=&quot;/4daadf269b2b271c4fc13802f5491bc0/banana_munch_diff_1_failure.gif&quot; alt=&quot;example of banana munch where the player loses&quot;&gt;
  &lt;figcaption&gt;Losing a round by not finishing the banana off in time!&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;Submissions&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Made By&lt;/th&gt;
&lt;th&gt;Engine&lt;/th&gt;
&lt;th&gt;Link&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;EdwardJFox&lt;/td&gt;
&lt;td&gt;Godot 3.4&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/EdwardJFox/microgame-kata-godot/tree/main/minigames/banana_munch&quot;&gt;GitHub&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href=&quot;/submit&quot;&gt;Submit your kata here&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Gold Digger]]></title><description><![CDATA[One of the most iconic games in the Warioware series, perfectly nailing its childish tone and playful nature. A finger is moving back and…]]></description><link>https://microgamekatas.dev/002-gold-digger/</link><guid isPermaLink="false">https://microgamekatas.dev/002-gold-digger/</guid><content:encoded>&lt;p&gt;One of the most iconic games in the Warioware series, perfectly nailing its childish tone and playful nature. A finger is moving back and forth in front of a nose. The players goal is to get the finger into the nose, by stopping it at the right moment so its finger can be thrust up directly into a nostril.&lt;/p&gt;
&lt;h2&gt;Criteria&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Draw a player character which moves around the nose without the characters interaction.&lt;/li&gt;
&lt;li&gt;Draw a nose with two nostrils for the finger to go into.&lt;/li&gt;
&lt;li&gt;The player presses an input to halt the fingers movement around the nose, and the finger gets moves towards (and hopefully into) the nose from that position.&lt;/li&gt;
&lt;li&gt;
&lt;div class=&quot;loseState&quot;&gt;Lose State&lt;/div&gt; The finger does not go into one of the nostrils, whether missing the nose completely or hitting the outside/middle of the nose.
&lt;/li&gt;
&lt;li&gt;
&lt;div class=&quot;winState&quot;&gt;Win State&lt;/div&gt; The finger makes it into one of the nostrils.
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Extra Credit&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Multiple difficulties; The original game uses a pinky finger for difficulty 1, pointer finger for difficulty 2, and two fingers (one for each nostril) for difficulty 3.&lt;/li&gt;
&lt;li&gt;Unique interactions depending on where the finger hits on the nose. E.g. instance hitting the middle turns up the nostrils, but go wild with it!&lt;/li&gt;
&lt;li&gt;
&lt;div class=&quot;loseState&quot;&gt;Lose State&lt;/div&gt; The timer runs out.
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Media&lt;/h2&gt;
&lt;figure&gt;
  &lt;img src=&quot;/83e1f860aa68f5c5c8745b385227ec16/gold_digger_diff_1_success.gif&quot; alt=&quot;example of a warioware round where the player wins&quot;&gt;
  &lt;figcaption&gt;The player winning a round by getting the finger in the nose successfully.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
  &lt;img src=&quot;/639377b5fe4c5a0588f8791443e4cb54/gold_digger_diff_1_failure.gif&quot; alt=&quot;example of a warioware round where the player loses&quot;&gt;
  &lt;figcaption&gt;The player loses a round by hitting the right side of the nose with the finger.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;Submissions&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Made By&lt;/th&gt;
&lt;th&gt;Engine&lt;/th&gt;
&lt;th&gt;Link&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;EdwardJFox&lt;/td&gt;
&lt;td&gt;Godot 3.4&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/EdwardJFox/microgame-kata-godot/tree/main/minigames/gold_digger&quot;&gt;GitHub&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href=&quot;/submit&quot;&gt;Submit your kata here&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Body Block]]></title><description><![CDATA[Fruit based Breakout themed action. Stop the watermelon from falling off the bottom of the screen by moving your body to block it! The…]]></description><link>https://microgamekatas.dev/003-body-block/</link><guid isPermaLink="false">https://microgamekatas.dev/003-body-block/</guid><content:encoded>&lt;p&gt;Fruit based Breakout themed action. Stop the watermelon from falling off the bottom of the screen by moving your body to block it!&lt;/p&gt;
&lt;p&gt;The player controller a paddle (in the case of the original, a persons body) left and right across the bottom of the screen. The ball (a watermelon) moves down towards the bottom of the screen at a random angle, and the player needs to move the paddle in the way to stop the ball falling off the bottom.&lt;/p&gt;
&lt;h2&gt;Criteria&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Add a player paddle, which they can move left and right by using whatever input method you prefer (e.g. controller, keyboard).&lt;/li&gt;
&lt;li&gt;Add a ball/watermelon, which moves at a consistent speed across the screen, bouncing when it hits the walls or the player.&lt;/li&gt;
&lt;li&gt;Have the ball pick a random spot across the top of the screen to start at, and random direction to move in. This means each time the game is loaded, the game is slightly different.&lt;/li&gt;
&lt;li&gt;
&lt;div class=&quot;loseState&quot;&gt;Lose State&lt;/div&gt; The ball goes past the player, and off the screen.
&lt;/li&gt;
&lt;li&gt;
&lt;div class=&quot;winState&quot;&gt;Win State&lt;/div&gt; The player survives for the entire length of the timer.
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Extra Credit&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Add some reaction animations for when the players paddle gets hit by the ball.&lt;/li&gt;
&lt;li&gt;Add more difficulties; in the original warioware implementation, the easiest difficulty has the paddle take up about 60% of the screen, and in the hardest it takes up 40% of the screen.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Media&lt;/h2&gt;
&lt;figure&gt;
  &lt;img src=&quot;/aa7b5f58f002423d133ba5b97dac7ee3/body_block_success.gif&quot; alt=&quot;example of body block where the player wins&quot;&gt;
  &lt;figcaption&gt;Winning a round keeping the watermelon in the play area for the whole timer.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
  &lt;img src=&quot;/2bebbf0d49b7ee57606d06ee5c0a57bd/body_block_failure.gif&quot; alt=&quot;example of body block where the player loses&quot;&gt;
  &lt;figcaption&gt;Losing a round by letting the watermelon passed the body, and off the bottom of the screen.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;Submissions&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Made By&lt;/th&gt;
&lt;th&gt;Engine&lt;/th&gt;
&lt;th&gt;Link&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;EdwardJFox&lt;/td&gt;
&lt;td&gt;Godot 3.4&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/EdwardJFox/microgame-kata-godot/tree/main/minigames/body_block&quot;&gt;GitHub&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href=&quot;/submit&quot;&gt;Submit your kata here&lt;/a&gt;&lt;/p&gt;</content:encoded></item></channel></rss>